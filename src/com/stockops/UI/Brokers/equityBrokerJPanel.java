/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.stockops.UI.Brokers;

import com.stockops.Brokerage.EquityBroker;
import com.stockops.Brokerage.EquityBuyRequest;
import com.stockops.Brokerage.EquitySellRequest;
import com.stockops.Business.EcoSystem;
import com.stockops.Establishments.Company;
import com.stockops.Investor.EquityHoldings;
import com.stockops.Investor.InvestorAbstract;
import com.stockops.Investor.RetailInvestor;
import com.stockops.Market.Equity;
import com.stockops.Users.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manju
 */
public class EquityBrokerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BrokerageModeratorJPanel
     */
    EcoSystem business;
    UserAccount account;
    EquityBroker equityBroker;
    EquitySellRequest equitySellRequest;
    EquityBuyRequest equityBuyRequest;

    public EquityBrokerJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem business) {
        this.business = business;
        this.account = account;
        this.equityBroker = (EquityBroker) account.getUser();
        initComponents();
        if (this.equityBroker.getAssignedMarket() == null) {
            changeScreen(marketNotAssigned);
            jLabel11.setText(this.equityBroker.getName());
        } else {
            changeScreen(homepage);
            jLabel1.setText(this.equityBroker.getName());
            jLabel5.setText(this.equityBroker.getAssignedMarket());
            jLabel9.setText(this.equityBroker.getName());
            jLabel10.setText(this.equityBroker.getName());
            populateBuyRequestTable();
            populateSellRequestTable();
            populateSharesTable();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homepage = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableShares = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buyRequests = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBuyReq = new javax.swing.JTable();
        btnBuy = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        sellRequest = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSellRequests = new javax.swing.JTable();
        btnSell = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        marketNotAssigned = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        homepage.setBackground(new java.awt.Color(255, 255, 255));

        tableShares.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tableShares.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Company Name", "Price Per Share", "Stock Qty", "Available Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableShares);
        if (tableShares.getColumnModel().getColumnCount() > 0) {
            tableShares.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Top Shares:");

        jButton2.setBackground(new java.awt.Color(85, 65, 118));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Buy Requests");
        jButton2.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 255, 204)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(85, 65, 118));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Sell Requests");
        jButton3.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 255, 204)));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Market");

        jPanel1.setBackground(new java.awt.Color(85, 65, 118));
        jPanel1.setPreferredSize(new java.awt.Dimension(420, 80));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Title");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout homepageLayout = new javax.swing.GroupLayout(homepage);
        homepage.setLayout(homepageLayout);
        homepageLayout.setHorizontalGroup(
            homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 947, Short.MAX_VALUE)
            .addGroup(homepageLayout.createSequentialGroup()
                .addGroup(homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homepageLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(homepageLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(homepageLayout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addComponent(jLabel5)))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        homepageLayout.setVerticalGroup(
            homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homepageLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(32, 32, 32)
                .addGroup(homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(151, 151, 151))
        );

        add(homepage, "card2");

        buyRequests.setBackground(new java.awt.Color(255, 255, 255));

        tblBuyReq.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblBuyReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Username", "Company Name", "Quotated Buy Price", "Qty Request", "Approval Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBuyReq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBuyReqMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBuyReq);

        btnBuy.setBackground(new java.awt.Color(85, 65, 118));
        btnBuy.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBuy.setForeground(new java.awt.Color(255, 255, 255));
        btnBuy.setText("Process Buy Request");
        btnBuy.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 255, 204)));
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setText("Buy Requests:");

        jButton4.setBackground(new java.awt.Color(85, 65, 118));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Reject Buy Request");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(85, 65, 118));
        jPanel2.setPreferredSize(new java.awt.Dimension(420, 80));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Title");

        jToggleButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jToggleButton1.setText("<< Back");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToggleButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout buyRequestsLayout = new javax.swing.GroupLayout(buyRequests);
        buyRequests.setLayout(buyRequestsLayout);
        buyRequestsLayout.setHorizontalGroup(
            buyRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 947, Short.MAX_VALUE)
            .addGroup(buyRequestsLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(buyRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buyRequestsLayout.createSequentialGroup()
                        .addComponent(btnBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4))
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        buyRequestsLayout.setVerticalGroup(
            buyRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buyRequestsLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(buyRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(169, 169, 169))
        );

        add(buyRequests, "card3");

        sellRequest.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel3.setText("Sell Requests:");

        tblSellRequests.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblSellRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Username", "Company Name", "Quotated Sell Price", "Qty Request", "Approval Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSellRequests.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSellRequestsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSellRequests);

        btnSell.setBackground(new java.awt.Color(85, 65, 118));
        btnSell.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSell.setForeground(new java.awt.Color(255, 255, 255));
        btnSell.setText("Process Sell Request");
        btnSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSellActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(85, 65, 118));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Reject Sell Request");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(85, 65, 118));
        jPanel3.setPreferredSize(new java.awt.Dimension(420, 80));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Title");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(153, 153, 153)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout sellRequestLayout = new javax.swing.GroupLayout(sellRequest);
        sellRequest.setLayout(sellRequestLayout);
        sellRequestLayout.setHorizontalGroup(
            sellRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 947, Short.MAX_VALUE)
            .addGroup(sellRequestLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(sellRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sellRequestLayout.createSequentialGroup()
                        .addComponent(btnSell)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5))
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sellRequestLayout.setVerticalGroup(
            sellRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sellRequestLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(sellRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSell, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(186, Short.MAX_VALUE))
        );

        add(sellRequest, "card4");

        marketNotAssigned.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel7.setText("You have not been assigned a market yet!");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel8.setText("Please wait for confirmation from the brokerage commission");

        jPanel4.setBackground(new java.awt.Color(85, 65, 118));
        jPanel4.setPreferredSize(new java.awt.Dimension(420, 80));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Title");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(219, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel11)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout marketNotAssignedLayout = new javax.swing.GroupLayout(marketNotAssigned);
        marketNotAssigned.setLayout(marketNotAssignedLayout);
        marketNotAssignedLayout.setHorizontalGroup(
            marketNotAssignedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(marketNotAssignedLayout.createSequentialGroup()
                .addGroup(marketNotAssignedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(marketNotAssignedLayout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel8))
                    .addGroup(marketNotAssignedLayout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 947, Short.MAX_VALUE)
        );
        marketNotAssignedLayout.setVerticalGroup(
            marketNotAssignedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(marketNotAssignedLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addContainerGap(496, Short.MAX_VALUE))
        );

        add(marketNotAssigned, "card5");
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        EquityBuyRequest buyRequest = this.equityBroker.getEquityBuyRequestById(Integer.parseInt(String.valueOf(tblBuyReq.getValueAt(tblBuyReq.getSelectedRow(), 0))));
        EquityHoldings holdingToAdd = new EquityHoldings();
        Boolean addNewFlag = true;
        InvestorAbstract buyer = new InvestorAbstract();
        if (buyRequest.getEquity().getAvailableQuantity() > buyRequest.getQuantity()) {

            if (buyRequest.getBuyer() instanceof RetailInvestor) {
                buyer = (RetailInvestor) buyRequest.getBuyer();
            } else if (buyRequest.getBuyer() instanceof Company) {
                buyer = (Company) buyRequest.getBuyer();
            }
            for (EquityHoldings equityHoldings : buyer.getEquityHoldings()) {
                if (equityHoldings.getEquity() == buyRequest.getEquity()) {
                    holdingToAdd = equityHoldings;
                    addNewFlag = false;
                }
            }
            double price = ((holdingToAdd.getBuyingPrice() * holdingToAdd.getQuantity()) + (buyRequest.getQuantity() * buyRequest.getEquity().getPrice())) / (holdingToAdd.getQuantity() + buyRequest.getQuantity());
            holdingToAdd.setQuantity(holdingToAdd.getQuantity() + buyRequest.getQuantity());
            holdingToAdd.setBuyingPrice(price);
            buyRequest.getEquity().setAvailableQuantity(buyRequest.getEquity().getAvailableQuantity() - buyRequest.getQuantity());
            if (addNewFlag) {
                holdingToAdd.setEquity(buyRequest.getEquity());
                buyer.getEquityHoldings().add(holdingToAdd);
            }
            buyRequest.getBuyer().getEquityBuyRequests().remove(buyRequest);
            this.equityBroker.getBuyRequests().remove(buyRequest);
            populateSharesTable();
            populateBuyRequestTable();
            populateSellRequestTable();
            JOptionPane.showMessageDialog(this, "Request Processed!");

        } else {
            JOptionPane.showMessageDialog(this, "Allotment quantity requested too high");
        }
    }//GEN-LAST:event_btnBuyActionPerformed

    private void tblSellRequestsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSellRequestsMouseClicked
        Equity equityToSell = this.business.getMarket().getEquityMarket().getEquityByName(String.valueOf(tblSellRequests.getValueAt(tblSellRequests.getSelectedRow(), 2)));
//        txtSellingShare.setText(equityToSell.getCompany().getName());
        int sellRequestId = Integer.parseInt(String.valueOf(tblSellRequests.getValueAt(tblSellRequests.getSelectedRow(), 0)));
        this.equitySellRequest = this.equityBroker.getEquitySellRequestById(sellRequestId);
    }//GEN-LAST:event_tblSellRequestsMouseClicked

    private void tblBuyReqMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBuyReqMouseClicked
        Equity equityToBuy = this.business.getMarket().getEquityMarket().getEquityByName(String.valueOf(tblBuyReq.getValueAt(tblBuyReq.getSelectedRow(), 2)));
        int buyRequestId = Integer.parseInt(String.valueOf(tblBuyReq.getValueAt(tblBuyReq.getSelectedRow(), 0)));
        this.equityBuyRequest = this.equityBroker.getEquityBuyRequestById(buyRequestId);
    }//GEN-LAST:event_tblBuyReqMouseClicked

    private void btnSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSellActionPerformed

        EquitySellRequest sellRequest = this.equityBroker.getEquitySellRequestById(Integer.parseInt(String.valueOf(tblSellRequests.getValueAt(tblSellRequests.getSelectedRow(), 0))));
        EquityHoldings holdingToSell = new EquityHoldings();
        if (sellRequest.getSeller() instanceof RetailInvestor) {
            for (EquityHoldings equityHoldings : ((RetailInvestor) sellRequest.getSeller()).getEquityHoldings()) {
                if (equityHoldings.getEquity() == sellRequest.getEquity()) {
                    holdingToSell = equityHoldings;
                }
            }
            holdingToSell.setQuantity(holdingToSell.getQuantity() - sellRequest.getQuantity());
            if (holdingToSell.getQuantity() == 0) {
                ((RetailInvestor) sellRequest.getSeller()).getEquityHoldings().remove(holdingToSell);
            }
        } else {
            for (EquityHoldings equityHoldings : ((Company) sellRequest.getSeller()).getEquityHoldings()) {
                if (equityHoldings.getEquity() == sellRequest.getEquity()) {
                    holdingToSell = equityHoldings;
                }
            }
            holdingToSell.setQuantity(holdingToSell.getQuantity() - sellRequest.getQuantity());
            if (holdingToSell.getQuantity() == 0) {
                ((Company) sellRequest.getSeller()).getEquityHoldings().remove(holdingToSell);
            }
        }
        sellRequest.getEquity().setAvailableQuantity(sellRequest.getEquity().getAvailableQuantity() + sellRequest.getQuantity());
        sellRequest.getSeller().getEquitySellRequests().remove(sellRequest);
        this.equityBroker.getSellRequests().remove(sellRequest);
        populateSharesTable();
        populateBuyRequestTable();
        populateSellRequestTable();
        JOptionPane.showMessageDialog(this, "Request Processed!");


    }//GEN-LAST:event_btnSellActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        changeScreen(homepage);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        changeScreen(homepage);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        changeScreen(buyRequests);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        changeScreen(sellRequest);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        EquityBuyRequest buyRequest = this.equityBroker.getEquityBuyRequestById(Integer.parseInt(String.valueOf(tblBuyReq.getValueAt(tblBuyReq.getSelectedRow(), 0))));
        InvestorAbstract buyer = buyRequest.getBuyer();
        buyer.setBalance(buyer.getBalance() + (buyRequest.getQuantity() * buyRequest.getEquity().getPrice()));
        buyRequest.getBuyer().getEquityBuyRequests().remove(buyRequest);
        this.equityBroker.getBuyRequests().remove(buyRequest);
        JOptionPane.showMessageDialog(this, "Request Rejected and Deleted!");
        populateBuyRequestTable();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        EquitySellRequest sellRequest = this.equityBroker.getEquitySellRequestById(Integer.parseInt(String.valueOf(tblSellRequests.getValueAt(tblSellRequests.getSelectedRow(), 0))));
        InvestorAbstract seller = sellRequest.getSeller();
        seller.setBalance(seller.getBalance() + (sellRequest.getQuantity() * sellRequest.getEquity().getPrice()));
        sellRequest.getSeller().getEquitySellRequests().remove(sellRequest);
        this.equityBroker.getSellRequests().remove(sellRequest);
        JOptionPane.showMessageDialog(this, "Request Rejected and Deleted!");
        populateSellRequestTable();
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnSell;
    private javax.swing.JPanel buyRequests;
    private javax.swing.JPanel homepage;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPanel marketNotAssigned;
    private javax.swing.JPanel sellRequest;
    private javax.swing.JTable tableShares;
    private javax.swing.JTable tblBuyReq;
    private javax.swing.JTable tblSellRequests;
    // End of variables declaration//GEN-END:variables

    private void populateBuyRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblBuyReq.getModel();
        model.setRowCount(0);
        for (EquityBuyRequest equityBuyRequest : this.equityBroker.getBuyRequests()) {
            Object[] row = new Object[6];
            row[0] = equityBuyRequest.getId();
            row[1] = equityBuyRequest.getBuyer().getName();
            row[2] = equityBuyRequest.getEquity().getCompany().getName();
            row[3] = equityBuyRequest.getEquity().getPrice();
            row[4] = equityBuyRequest.getQuantity();
            row[5] = "pending";
            model.addRow(row);
        }
    }

    private void populateSellRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblSellRequests.getModel();
        model.setRowCount(0);
        for (EquitySellRequest equitySellRequest : this.equityBroker.getSellRequests()) {
            Object[] row = new Object[6];
            row[0] = equitySellRequest.getId();
            row[1] = equitySellRequest.getSeller().getName();
            row[2] = equitySellRequest.getEquity().getCompany().getName();
            row[3] = equitySellRequest.getEquity().getPrice();
            row[4] = equitySellRequest.getQuantity();
            row[5] = "pending";
            model.addRow(row);
        }
    }

    private void populateSharesTable() {
        DefaultTableModel model = (DefaultTableModel) tableShares.getModel();
        model.setRowCount(0);
        for (Equity equity : this.business.getMarket().getEquityMarket().getEquityList()) {
            Object[] row = new Object[4];
            row[0] = equity.getCompany().getName();
            row[1] = equity.getPrice();
            row[2] = equity.getStockQuantity();
            row[3] = equity.getAvailableQuantity();
            model.addRow(row);
        }
    }

    private void changeScreen(JPanel newJPanel) {
        this.removeAll();
        this.add(newJPanel);
        this.revalidate();
        this.repaint();
    }
}
