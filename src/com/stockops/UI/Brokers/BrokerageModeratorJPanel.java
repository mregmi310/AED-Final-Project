/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.stockops.UI.Brokers;

import com.stockops.Brokerage.EquityBroker;
import com.stockops.Brokerage.EquityBuyRequest;
import com.stockops.Business.EcoSystem;
import com.stockops.Market.Equity;
import com.stockops.Users.UserAccount;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manju
 */
public class BrokerageModeratorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BrokerageModeratorJPanel
     */
    EcoSystem business;
    UserAccount account;
    EquityBroker equityBroker;
    public BrokerageModeratorJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem business) {
        this.business=business;
        this.account=account;
        this.equityBroker=(EquityBroker)account.getUser();
        initComponents();
        populateBuyRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBuyReq = new javax.swing.JTable();
        jBtnapprove = new javax.swing.JButton();
        jBtnDecline = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableManagers1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setText("Title");

        tblBuyReq.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblBuyReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Company Name", "Quotated Buy Price", "Qty Request", "Approval Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBuyReq);

        jBtnapprove.setText("Approve");

        jBtnDecline.setText("Decline");

        tableManagers1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tableManagers1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Company Name", "Quotated Sell Price", "Qty Request", "Approval Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableManagers1);

        jLabel2.setText("Buy Request");

        jLabel3.setText("Sell Request");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(374, 374, 374)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jBtnapprove)
                        .addGap(119, 119, 119)
                        .addComponent(jBtnDecline))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnapprove)
                    .addComponent(jBtnDecline))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnDecline;
    private javax.swing.JButton jBtnapprove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableManagers1;
    private javax.swing.JTable tblBuyReq;
    // End of variables declaration//GEN-END:variables

    private void populateBuyRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblBuyReq.getModel();
        model.setRowCount(0);
        for(EquityBuyRequest equityBuyRequest: this.equityBroker.getBuyRequests()){
            Object[] row= new Object[5];
            row[0]=equityBuyRequest.getBuyer().getName();
            row[1]=equityBuyRequest.getEquity().getCompany().getName();
            row[2]=equityBuyRequest.getEquity().getPrice();
            row[3]=equityBuyRequest.getQuantity();
            row[4]="pending";
            model.addRow(row);
        }
    }
}
